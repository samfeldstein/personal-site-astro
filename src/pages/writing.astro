---
import "/src/styles/_fonts.css";
import "/src/styles/_reset.css";

const writing = [
  {
    title: "Made of Memories",
    type: "Short Story",
    genre: "Horror",
    medium: "Podcast",
    date: "December 2023",
    outlet: "Tales to Terrify",
    url: "https://talestoterrify.com/episodes/619-z-j-garcia-samuel-feldstein/",
    blurb:
      "We are living until we are dying. We are dying until we are dead, and live again.",
  },
  {
    title: "Queen of the Thunderbeasts",
    type: "Roleplaying Adventure",
    genre: "Fantasy",
    medium: "eBook (PDF)",
    date: "January 2023",
    outlet: "The Dungeon Masters Guild",
    url: "https://www.dmsguild.com/product/426630/Queen-of-the-Thunderbeasts?affiliate_id=1701028",
  },
  {
    title: "The First",
    type: "Short Story",
    genre: "Fantasy",
    medium: "Digital",
    date: "October 2022",
    outlet: "The Collidescope",
    url: "https://thecollidescope.com/2022/10/16/the-first/",
  },
  {
    title:
      "Big Bend Reproductive Coalition launches community needs assessment",
    type: "News Article",
    medium: "Print, Digital",
    date: "August 2023",
    outlet: "The Big Bend Sentinel",
    url: "https://bigbendsentinel.com/2023/08/09/big-bend-reproductive-coalition-launches-community-needs-assessment-with-inaugural-town-hal/?mc_cid=b24b0bb606",
  },
  {
    title:
      "Trans-Pecos Festival of Music + Love doubles as platform for advocacy and outreach",
    type: "News Article",
    medium: "Print, Digital",
    date: "October 2022",
    outlet: "The Big Bend Sentinel",
    url: "https://bigbendsentinel.com/2022/10/05/trans-pecos-festival-of-music-love-doubles-as-platform-for-advocacy-and-outreach/",
  },
  {
    title: "Absence of Meaning in 'The Lighthouse'",
    type: "Criticism",
    medium: "Digital",
    date: "April 2022",
    outlet: "The Frida Cinema Blog",
    url: "https://thefridacinema.org/film-criticism/absence-of-meaning-the-lighthouse/",
  },
];

writing.sort((a, b) => new Date(b.date) - new Date(a.date));

// Structured Data
const schema = {
  "@context": "https://schema.org",
  "@type": "CreativeWork",
  name: "Writing Portfolio | Sam Feldstein",
  description:
    "My portfolio of fiction, short stories, poetry, essays, news articles, and informative video scripts.",
  url: "https://samfeldstein.xyz/writing/",
  image: "https://samfeldstein.xyz/images/sam-feldstein-open-graph-image.png",
  author: {
    "@type": "Person",
    name: "Sam Feldstein",
    url: "https://samfeldstein.xyz",
  },
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <!-- Icons
      - Guide: https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs
      - Favicon generator: https://favicon.io
      - Another favicon generator: https://realfavicongenerator.net/
      - SVG generator: https://formito.com/tools/favicon
      - Image compressor: https://squoosh.app/
      - SVG optimizer: https://jakearchibald.github.io/svgomg/
      - Favicon checker: https://realfavicongenerator.net/favicon_checker  
    -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg?v=3" />
    <link
      rel="icon"
      type="image/png"
      sizes="96x96"
      href="/favicon-96x96.png?v=3"
    />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/apple-touch-icon.png?v=3"
    />
    <meta name="apple-mobile-web-app-title" content="Sam Feldstein" />
    <link rel="manifest" href="/site.webmanifest" />

    <!-- Preload assets -->
    <link
      rel="preload"
      href="/fonts/subset-EBGaramond-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <link
      rel="preload"
      href="/fonts/subset-EBGaramond-Bold.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>Writing Portfolio | Sam Feldstein</title>
    <meta name="author" content="Sam Feldstein" />
    <meta
      name="description"
      content="My portfolio of fiction, short stories, poetry, essays, news articles, and informative video scripts."
    />
    <meta property="og:title" content="Writing Portfolio | Sam Feldstein" />
    <meta
      property="og:description"
      content="My portfolio of fiction, short stories, poetry, essays, news articles, and informative video scripts."
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url.href} />
    <meta
      property="og:image"
      content="https://samfeldstein.xyz/images/sam-feldstein-open-graph-image.png"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Sam Feldstein"
      href={new URL("feed.xml", Astro.site)}
    />
    <link
      rel="alternate"
      type="application/atom+xml"
      title="Sam Feldstein's Notebook"
      href="https://notebook.samfeldstein.xyz/feed.xml"
    />

    <script type="application/ld+json" set:html={JSON.stringify(schema)} />

    <!-- Clean up old service workers -->
    <script>
      async function uninstallServiceWorkers() {
        try {
          // Get a list of all service worker registrations
          const registrations =
            await navigator.serviceWorker.getRegistrations();

          if (registrations.length === 0) {
            console.log("No service workers found to uninstall");
            return;
          }

          // Uninstall each service worker
          const uninstallPromises = registrations.map(async (registration) => {
            try {
              const success = await registration.unregister();
              if (success) {
                console.log(
                  `Service worker at ${registration.scope} successfully uninstalled`,
                );
              } else {
                console.warn(
                  `Failed to uninstall service worker at ${registration.scope}`,
                );
              }
            } catch (error) {
              console.error(
                `Error uninstalling service worker at ${registration.scope}:`,
                error,
              );
            }
          });

          // Wait for all uninstallation attempts to complete
          await Promise.all(uninstallPromises);

          console.log("Service worker uninstallation process completed");

          // Optional: Reload the page to ensure clean state
          // window.location.reload();
        } catch (error) {
          console.error("Error during service worker uninstallation:", error);
          throw error;
        }
      }

      uninstallServiceWorkers();
    </script>
  </head>
  <body>
    <header>
      <span class="home">‚Üê</span><a class="home" href="/">Home</a>
      <h1>Writing I've Written</h1>
    </header>
    <section class="entries">
      {
        writing.map((item) => (
          <div class="entry">
            <h2 set:html={item.title.replace(/'(.*?)'/, "<em>$1</em>")} />
            <p>{item.date}</p>
            <p>{item.blurb}</p>
          </div>
        ))
      }
    </section>
  </body>
</html>

<style>
  body {
    margin: 0 auto;
    padding: 1rem;
    gap: 1rem;
    font-family: "Courier Prime";
  }

  section.entries {
    display: grid;
    margin: 0 auto;
    gap: 1rem;
  }

  span.home {
    margin-right: 3px;
  }

  a.home {
    text-transform: uppercase;
    text-decoration: none;
    position: relative;
  }

  a.home::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 1px;
    background-color: currentColor; /* Use the same color as the text */
    transition: width 0.2s ease; /* Animate the width */
  }

  a.home:hover::after,
  a.home:focus::after {
    width: 100%; /* Expand the underline to full width */
  }

  div.entry {
    border-style: double;
    border-width: 5px;
    border-radius: 5px;
    padding: 1rem 2rem;
  }

  h1 {
    font-family: "Cheveuxdange";
    font-weight: 100;
    font-size: calc(1rem + 8vw);
    text-align: center;
    text-wrap: balance;
  }

  h2 {
    font-family: "Monument";
    font-weight: 100;
    font-size: calc(1rem + 1vw);
    text-wrap: balance;
  }

  @media screen and (min-width: 700px) {
    section.entries {
      grid-template-columns: 1fr 1fr;
    }
  }

  @media screen and (min-width: 1200px) {
    section.entries {
      grid-template-columns: 1fr 1fr 1fr;
    }
  }
</style>

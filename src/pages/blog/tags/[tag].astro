---
// Layout
import BaseLayout from "../../../layouts/BaseLayout.astro";

// Components
import Date from "../../../components/Date.astro";

// Collections
import { getCollection } from "astro:content";

// Utils
import { sortCollectionByDate } from "../../../scripts/utils.ts";

// Functions
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const uniqueTags = [...new Set(posts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = posts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

// Variables
const { tag } = Astro.params;
const { posts } = Astro.props;

// Calls
sortCollectionByDate(posts);

// Data
const schema = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  name: `Posts Tagged "${tag.charAt(0).toUpperCase() + tag.slice(1)}" | Sam Feldstein's Blog`,
  url: `https://samfeldstein.xyz/blog/tags/${tag}`,
  description: `Posts tagged "${tag}"`,
};
---

<BaseLayout
  title=`Posts Tagged "${tag.charAt(0).toUpperCase() + tag.slice(1)}"`
  description=`Posts tagged "${tag}".`
  schema={schema}
>
  <h1>Posts About {tag}</h1>
  <ul>
    {
      posts.map((post) => (
        <li>
          <a
            class="title"
            href={`/blog/${post.id}/`}
            set:html={post.data.title}
          />
          <div class="info">
            <Date date={post.data.pubDate} />
          </div>
        </li>
      ))
    }
  </ul>

  <p>See <a href="/blog/tags/">all tags</a>.</p>
</BaseLayout>

<style>
  h1 {
    /* Tags are lowercare by default */
    text-transform: capitalize;
  }
  
  ul {
    list-style-type: none;
    display: grid;
    gap: 2rem;
    margin: 6rem 0;
    padding: 0;
  }

  .info {
    font-size: var(--font-small);
  }

  a {
    &.title {
      font-weight: 700;
      font-size: var(--font-medium);
      display: inline-block;
      text-wrap: balance;
      line-height: 1;
    }
  }
</style>
